#data filtering:
setwd("/Users/kai/Desktop/software/tax-e/data/freqs") #//set the working directory here:
library(vegan)
library(ggplot2)
library(dplyr)
library(tidyr)
#data filtering:
setwd("/Users/kai/Desktop/software/tax-e/data/freqs") #//set the working directory here:
# pcoa on d1_sub_log.csv
#####################################################################
combined <- as.data.frame(read.csv(file = "d1_sub_log.csv",header = TRUE))
combined <- combined %>% select(-sample)
targets <- combined %>% select(target)
combined <- combined %>% select(-target)
combined <- cbind(targets,combined)
source("https://bioconductor.org/biocLite.R")
biocLite("tissuesGeneExpression")
d_data <- dist(as.matrix(combined))   # find distance matrix
hc_data <- hclust(d_data)                # apply hirarchical clustering
targets_chr <- sapply(targets, unlist)
plot(hc_data,labels=targets_chr,cex=0.5)
myplclust(hc_data, labels=targets_chr, lab.col=as.fumeric(targets_chr), cex=0.5)
install_github("ririzarr/rafalib")
#hierarchical clustering
#install.packages("devtools")
library(devtools) # get from CRAN with install.packages("devtools")
install_github("ririzarr/rafalib")
myplclust(hc_data, labels=targets_chr, lab.col=as.fumeric(targets_chr), cex=0.5)
library(rafalib)
myplclust(hc_data, labels=targets_chr, lab.col=as.fumeric(targets_chr), cex=0.5)
# cut the tree to look at the individual clusters
hclusters <- cutree(hc_data, h=110)
table(true=targets_chr, cluster=hclusters)
hclusters <- cutree(hc_data, k=6)
table(true=targets_chr, cluster=hclusters)
set.seed(1)
#km <- kmeans(t(e[1:2,]), centers=7)
km_data <- kmeans(t(d_data), centers=6)
#first plot is actual, second is kmeans clusters
#in the sample space of the first 2 go terms
mypar(1,2)
plot(e[1,], e[2,], col=as.fumeric(targets_chr), pch=16)
plot(e[1,], e[2,], col=km_data$cluster, pch=16)
#kmeans on all genes
km_data <- kmeans(t(d_data), centers=10)
#km <- kmeans(t(e), centers=7)
mds <- cmdscale(d_data)
#note the colors are confusing because in the left plot its ordered
#by biome, whereas the second is the kmeans clusters.
mypar(1,2)
plot(mds[,1], mds[,2], col=as.fumeric(targets_chr))
plot(mds[,1], mds[,2], col=km_data$cluster, pch=16)
table(true=targets_chr,cluster=km_data$cluster)
library(RColorBrewer)
hmcol <- colorRampPalette(brewer.pal(9, "GnBu"))(100)
library(genefilter)
install.packages(genefilter)
library(genefilter)
source("https://bioconductor.org/biocLite.R")
biocLite("tissuesGeneExpression")
source("https://bioconductor.org/biocLite.R")
biocLite("tissuesGeneExpression")
biocLite("remotes")
library(BiocInstaller)
biocLite("genomicsclass/tissuesGeneExpression")
library(tissuesGeneExpression)
data(tissuesGeneExpression)
library(RColorBrewer)
hmcol <- colorRampPalette(brewer.pal(9, "GnBu"))(100)
install.packages(genefilter)
library(genefilter)
source("https://bioconductor.org/biocLite.R")
biocLite("genefilter")
#install.packages(genefilter)
library(genefilter)
rv <- rowVars(e)
idx <- order(-rv)[1:40]
rv <- rowVars(e)
idx <- order(-rv)[1:40]
rv_data <- rowVars(combined)
rv_data <- rowVars(as.matrix(combined))
as.matrix(combined)
head(e)
typeof(e)
typeof(combined)
?order
?order()
?rowVars
rv_data <- rowVars <- as.data.frame(as.matrix(combined))
#rv_data <- rowVars(as.matrix(combined))
idx_data <- order(-rv_data)[1:40]
use warnings()
#rv_data <- rowVars(as.matrix(combined))
idx_data <- order(-rv_data, use warnings())[1:40]
#rv_data <- rowVars(as.matrix(combined))
idx_data <- order(-rv_data, )[1:40]
#rv_data <- rowVars(as.matrix(combined))
idx_data <- order(-rv_data )[1:40]
rv_data <- rowVars(as.data.frame(as.matrix(combined)))
c <- as.matrix(combined)
c <- sapply(c, as.numeric)
head(c)
c <- as.matrix(combined)
head(c)
c <- as.data.frame(combined)
head(c)
head(e)
e_head <- head(e)
View(e_head)
typeof(e)
typeof(e_head)
c_head <- head(combined)
View(c_head)
targets_chr
km_data <- kmeans(d_data, centers=6)
#kmeans on all genes
km_data <- kmeans(t(d_data), centers=10)
#km <- kmeans(t(e), centers=7)
mds <- cmdscale(d_data)
#first plot is actual, second is kmeans clusters
#note the colors are confusing because in the left plot its ordered
#by biome, whereas the second is the kmeans clusters.
mypar(1,2)
plot(mds[,1], mds[,2], col=as.fumeric(targets_chr))
plot(mds[,1], mds[,2], col=km_data$cluster, pch=16)
c_head <- head(t(combined))
View(c_head)
rv_data <- rowVars(as.matrix(t(combined)))
typeof(e_head)
typeof(c_head)
rv_data <- rowVars((t(combined))
rv_data <- rowVars(t(combined))
rv_data <- rowVars(t(combined))
typeof(e_head)
typeof(c_head)
cc<- as.double(c_head)
c_head <- head(as.data.frame.matrix(t(combined)))
typeof(e_head)
typeof(c_head)
cc<- as.double(c_head)
c_head <- head(as.data.frame(t(combined)))
typeof(e_head)
typeof(c_head)
e_head <- head(e)
c_head <- head(t(combined))
e_head <- head(e)
c_head <- head(t(combined))
typeof(e_head)
typeof(c_head)
View(c_head)
View(e_head)
typeof(e)
typeof(t(combined))
c_head <- as.data.frame(head(t(combined)))
typeof(e_head)
typeof(c_head)
c_head <- as.matrix(head(t(combined)))
typeof(e_head)
typeof(c_head)
View(c_head)
head(as.matrix(combined))
View(as.matrix(combined))
typeof(e_head)
typeof(c_head)
combined <- as.data.frame(read.csv(file = "d1_sub_log.csv",header = TRUE))
combined <- combined %>% select(-sample)
combined <- as.data.frame(read.csv(file = "d1_sub_log.csv",header = TRUE))
combined <- combined %>% select(-sample)
targets <- combined %>% select(target)
combined <- combined %>% select(-target)
combined <- cbind(targets,combined)
combined <- as.data.frame(read.csv(file = "d1_sub_log.csv",header = TRUE))
combined <- combined %>% select(-sample)
targets <- combined %>% select(target)
combined <- combined %>% select(-target)
combined <- as.data.frame(read.csv(file = "d1_sub_log.csv",header = TRUE))
combined <- combined %>% select(-sample)
targets <- combined %>% select(target)
combined <- combined %>% select(-target)
typeof(combined)
typeof(head(combined))
combined <- as.matrix(head(t(combined)))
typeof(combined)
typeof(e)
combined <- cbind(targets,combined)
combined <- as.data.frame(read.csv(file = "d1_sub_log.csv",header = TRUE))
combined <- combined %>% select(-sample)
targets <- combined %>% select(target)
combined <- combined %>% select(-target)
combined <- as.matrix(head(t(combined)))
View(combined)
combined <- as.data.frame(read.csv(file = "d1_sub_log.csv",header = TRUE))
combined <- combined %>% select(-sample)
targets <- combined %>% select(target)
combined <- combined %>% select(-target)
combined <- as.data.frame(read.csv(file = "d1_sub_log.csv",header = TRUE))
combined <- combined %>% select(-sample)
targets <- combined %>% select(target)
combined <- combined %>% select(-target)
combined <- as.matrix(head(combined))
typeof(combined)
combined <- cbind(targets,combined)
head(combined)
View(head(combined))
combined <- as.data.frame(read.csv(file = "d1_sub_log.csv",header = TRUE))
combined <- combined %>% select(-sample)
targets <- combined %>% select(target)
combined <- combined %>% select(-target)
combined <- as.matrix(head(combined))
typeof(combined)
View(head(combined))
combined <- as.data.frame(read.csv(file = "d1_sub_log.csv",header = TRUE,row.names = 1))
head(combined)
View(head(combined))
combined <- as.data.frame(read.csv(file = "d1_sub_log.csv",header = TRUE,row.names = 2))
View(head(combined))
combined <- as.data.frame(read.csv(file = "d1_sub_log.csv",header = TRUE))
View(head(combined))
combined <- combined %>% select(-sample)
targets <- combined %>% select(target)
combined <- combined %>% select(-target)
combined <- as.matrix(head(combined))
typeof(combined)
View(head(combined))
#combined <- as.data.frame(read.csv(file = "d1_sub_log.csv",header = TRUE,row.names = 1))
combined <- as.data.frame(read.csv(file = "d1_sub_log.csv",header = TRUE))
combined <- combined %>% select(-sample)
targets <- combined %>% select(target)
combined <- combined %>% select(-target)
combined <- as.matrix(head(combined))
typeof(combined)
View(head(combined))
row.names(combined) <- targets
rv <- rowVars(e)
?heatmap.2
?hclust
d_data <- dist(as.matrix(combined))   # find distance matrix
hc_data <- hclust(d_data, method = "ward.D")       # apply hirarchical clustering
targets_chr <- sapply(targets, unlist)
plot(hc_data,labels=targets_chr,cex=0.5)
myplclust(hc_data, labels=targets_chr, lab.col=as.fumeric(targets_chr), cex=0.5)
# pcoa on d1_sub_log.csv
#####################################################################
combined <- as.data.frame(read.csv(file = "d1_sub_log.csv",header = TRUE))
combined <- combined %>% select(-sample)
targets <- combined %>% select(target)
combined <- combined %>% select(-target)
combined <- cbind(targets,combined)
d_data <- dist(as.matrix(combined))   # find distance matrix
hc_data <- hclust(d_data, method = "ward.D")       # apply hirarchical clustering
targets_chr <- sapply(targets, unlist)
plot(hc_data,labels=targets_chr,cex=0.5)
myplclust(hc_data, labels=targets_chr, lab.col=as.fumeric(targets_chr), cex=0.5)
d_data <- dist(as.matrix(combined))   # find distance matrix
hc_data <- hclust(d_data, method = "ward.D")       # apply hirarchical clustering
targets_chr <- sapply(targets, unlist)
myplclust(hc_data, labels=targets_chr, lab.col=as.fumeric(targets_chr), cex=0.5)
#plot(hc_data,labels=targets_chr,cex=0.5)
mypar(1,1)
myplclust(hc_data, labels=targets_chr, lab.col=as.fumeric(targets_chr), cex=0.5)
setwd("/Users/kai/Desktop/software/tax-e/data/freqs") #//set the working directory here:
combined <- as.data.frame(read.csv(file = "d1_sub_log_trans.csv",header = TRUE,row.names = 1))
setwd("/Users/kai/Desktop/software/tax-e/scripts/r_scripts") #//set the working directory here:
combined <- as.data.frame(read.csv(file = "d1_sub_log_trans.csv",header = TRUE,row.names = 1))
#combined <- as.data.frame(read.csv(file = "d1_sub_log.csv",header = TRUE))
combined <- combined %>% select(-sample)
combined <- as.data.frame(read.csv(file = "d1_sub_log_trans.csv",header = TRUE,row.names = 1))
typeof(combined)
c <- as.matrix(combined)
View(head(c))
c <- as.matrix(combined)
rv_data <- rowVars(c)
idx_data <- order(-rv_data )[1:40]
library(gplots) ##Available from CRAN
install.packages(gplots)
install.packages("gplots")
library(gplots) ##Available from CRAN
cols <- palette(brewer.pal(8, "Dark2"))[as.fumeric(targets_chr)]
head(cbind(colnames(c),cols))
heatmap.2(e[idx,], labCol=targets_chr,
trace="none",
ColSideColors=cols,
col=hmcol)
heatmap.2(c[idx,], labCol=targets_chr,
trace="none",
ColSideColors=cols,
col=hmcol)
heatmap.2(c[idx_data,], labCol=targets_chr,
trace="none",
ColSideColors=cols,
col=hmcol)
colnames(c)
idx_data
targets_chr
rv_data
idx_data
View(idx_data)
c[idx_data,]
c[idx_data]
c[idx_data,]
View(c[idx_data,])
hm <- heatmap.2(c[idx_data,], labCol=targets_chr,
trace="none",
ColSideColors=cols,
col=hmcol)
hm <- heatmap.2(c[idx_data,], labCol=targets_chr,
trace="none",
ColSideColors=cols,
col=hmcol)
heatmap.2(c[idx_data,], labCol=targets_chr,
trace="none",
ColSideColors=cols,
col=hmcol)
heatmap.2(c[idx_data,], labCol=targets_chr,
trace="none",
ColSideColors=cols,
col=hmcol)
hm <- heatmap.2(c[idx_data,], labCol=targets_chr,
trace="none",
ColSideColors=cols,
col=hmcol)
hm
full <- heatmap.2(c[idx_data,], labCol=targets_chr, trace="none", ColSideColors=cols, col=hmcol)
full <- heatmap.2(c[idx_data,], labCol=targets_chr, trace="none", ColSideColors=cols, col=hmcol)
full
full <- heatmap.2(c[idx_data,], labCol=targets_chr, trace="none", ColSideColors=cols, col=hmcol)
heatmap.2(c[idx_data,], labCol=targets_chr, trace="none", ColSideColors=cols, col=hmcol)
heatmap.2(c[idx_data,], labCol=targets_chr, trace="none", ColSideColors=cols, col=hmcol)
full <- heatmap.2(c[idx_data,], labCol=targets_chr, trace="none", ColSideColors=cols, col=hmcol)
full
full <- heatmap.2(c[idx_data,], labCol=targets_chr, trace="none", ColSideColors=cols, col=hmcol)
View(full)
full[["rowInd"]]
full[["rowInd"]]
full[["rowDendrogram"]]
full[["rowDendrogram"]][[2]]
full[["rowDendrogram"]][[1]][[2]][[2]][[2]][[2]]
full[["rowDendrogram"]]
View(full[["rowDendrogram"]])
typeof(full[["rowDendrogram"]])
glimpse(full[["rowDendrogram"]])
print(full[["rowDendrogram"]])
full[["rowDendrogram"]][[2]][[1]][[2]][[2]][[2]]
cut(full[["rowDendrogram"]], h = 1)
cut(full[["rowDendrogram"]], h = 0)
cut(full[["rowDendrogram"]], h = 0)
row_dend <- cut(full[["rowDendrogram"]], h = 0)
row_dend$lower
row_dend$upper
row_dend$lower[1]
row_dend$lower
glimpse(row_dend$lower)
row_dend$lower
col_dend <- cut(full[["colDendrogram"]], h= 0)
col_dend$lower
col_dend <- cut(full[["colDendrogram"]], h= 100)
col_dend$lower
full[["colDendrogram"]][[1]][[1]]
full[["colDendrogram"]][[1]][[1]][[2]][[1]][[1]][[1]]
full[["colDendrogram"]][[1]][[1]][[2]][[2]][[1]][[1]]
#data filtering:
setwd("/Users/kai/Desktop/software/tax-e/data/freqs") #//set the working directory here:
# pcoa on d1_sub_log.csv
#####################################################################
combined <- as.data.frame(read.csv(file = "d1_subsample_log_all.csv",header = TRUE))
combined <- combined %>% select(-sample)
targets <- combined %>% select(target)
combined <- combined %>% select(-target)
combined <- cbind(targets,combined)
d_data <- dist(as.matrix(combined))   # find distance matrix
hc_data <- hclust(d_data, method = "ward.D")       # apply hirarchical clustering
targets_chr <- sapply(targets, unlist)
#plot(hc_data,labels=targets_chr,cex=0.5)
mypar(1,1)
myplclust(hc_data, labels=targets_chr, lab.col=as.fumeric(targets_chr), cex=0.5)
# pcoa on d1_subsample_log_all.csv
# doing pcoa on my data
my.dis <- vegdist(decostand(combined[,-1],"hellinger"))
my.pcoa <- cmdscale(my.dis, eig = TRUE)
with(combined, levels(target))
colors_vec <-palette(rainbow(8))
#try to fix it from here https://www.fromthebottomoftheheap.net/2012/04/11/customising-vegans-ordination-plots/
#get the species names
my.pcoa$species <- wascores(my.pcoa$points, combined[,-1], expand = TRUE)
#plot the figure
fig <- ordiplot(my.pcoa, type = "none")
#text(fig, "species", col="#d43e24", cex=0.9)
points(fig, "sites", col=colors_vec,  cex=1, pch=19)
source("https://bioconductor.org/biocLite.R")
####
# tf (term freq) data
combined <- as.data.frame(read.csv(file = "d1_subsample_tf_all.csv",header = TRUE))
combined <- combined %>% select(-sample)
targets <- combined %>% select(target)
combined <- combined %>% select(-target)
combined <- cbind(targets,combined)
#compute the distance between each sample:
d_data <- dist(as.matrix(combined))   # find distance matrix
hc_data <- hclust(d_data, method = "ward.D")       # apply hirarchical clustering
targets_chr <- sapply(targets, unlist)
mypar(1,1)
myplclust(hc_data, labels=targets_chr, lab.col=as.fumeric(targets_chr), cex=0.5)
####
# tf (term freq) data
combined_tf <- as.data.frame(read.csv(file = "d1_subsample_tf_all.csv",header = TRUE))
combined_tf <- combined_tf %>% select(-sample)
targets <- combined_tf %>% select(target)
combined_tf <- combined_tf %>% select(-target)
combined_tf <- cbind(targets,combined_tf)
#compute the distance between each sample:
d_data <- dist(as.matrix(combined_tf))   # find distance matrix
hc_data <- hclust(d_data, method = "ward.D")       # apply hirarchical clustering
targets_chr <- sapply(targets, unlist)
mypar(1,1)
myplclust(hc_data, labels=targets_chr, lab.col=as.fumeric(targets_chr), cex=0.5)
#####
# tf heatmap
combined <- as.data.frame(read.csv(file = "d1_subsample_tf_all_trans.csv",header = TRUE,row.names = 1))
setwd("/Users/kai/Desktop/software/tax-e/scripts/r_scripts") #//set the working directory here:
#####
# tf heatmap
combined <- as.data.frame(read.csv(file = "d1_subsample_tf_all_trans.csv",header = TRUE,row.names = 1))
c <- as.matrix(combined)
rv_data <- rowVars(c)
idx_data <- order(-rv_data )[1:40]
install.packages("gplots")
install.packages("gplots")
cols <- palette(brewer.pal(8, "Dark2"))[as.fumeric(targets_chr)]
head(cbind(colnames(c),cols))
full_tf <- heatmap.2(c[idx_data,], labCol=targets_chr,
trace="none", ColSideColors=cols,
col=hmcol)
combined <- as.data.frame(read.csv(file = "d1_subsample_log_all_trans.csv",header = TRUE,row.names = 1))
c <- as.matrix(combined)
rv_data <- rowVars(c)
idx_data <- order(-rv_data )[1:60]
cols <- palette(brewer.pal(8, "Dark2"))[as.fumeric(targets_chr)]
head(cbind(colnames(c),cols))
full <- heatmap.2(c[idx_data,], labCol=targets_chr,
trace="none", ColSideColors=cols,
col=hmcol)
#####
# tf heatmap
combined <- as.data.frame(read.csv(file = "d1_subsample_tf_all_trans.csv",header = TRUE,row.names = 1))
c <- as.matrix(combined)
rv_data <- rowVars(c)
idx_data <- order(-rv_data )[1:60]
cols <- palette(brewer.pal(8, "Dark2"))[as.fumeric(targets_chr)]
head(cbind(colnames(c),cols))
full_tf <- heatmap.2(c[idx_data,], labCol=targets_chr,
trace="none", ColSideColors=cols,
col=hmcol)
?heatmap.2
full[["call"]][["ColSideColors"]]
full_tf <- heatmap.2(c[idx_data,], labCol=targets_chr,
trace="none", ColSideColors=cols,
col=hmcol,
hclustfun = hclust(c[idx_data,],method = 'ward.D'))
hclust.ave <- function(c[idx_data,]) hclust(c[idx_data,], method="ward.D")
hclust.ave <- function(c) hclust(c, method="ward.D")
full_tf <- heatmap.2(c[idx_data,], labCol=targets_chr,
trace="none", ColSideColors=cols,
col=hmcol, hclustfun=hclust.ave )
combined <- as.data.frame(read.csv(file = "d1_subsample_log_all_trans.csv",header = TRUE,row.names = 1))
c <- as.matrix(combined)
rv_data <- rowVars(c)
idx_data <- order(-rv_data )[1:60]
cols <- palette(brewer.pal(8, "Dark2"))[as.fumeric(targets_chr)]
head(cbind(colnames(c),cols))
hclust.ward <- function(c) hclust(c, method="ward.D")
full <- heatmap.2(c[idx_data,], labCol=targets_chr,
trace="none", ColSideColors=cols,
col=hmcol, hclustfun=hclust.ward )
